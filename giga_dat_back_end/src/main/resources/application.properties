spring.application.name=giga_dat_back_end

#properties
#if you do development please uncomment this
spring.profiles.active=dev

#Server config
server.port=39222
server.servlet.context-path=/gigaDat/v1

springdoc.swagger-ui.enabled=true

#DATABASE
spring.sql.init.platform= postgres
spring.datasource.url=${GDB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PW}

#The sql dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.type=info
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

spring.sql.init.mode=always
spring.sql.init.continue-on-error=true

logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=info
log4j.logger.org.hibernate=error
log4j.rootLogger=info, stdout, R

Access-Control-Allow-Origin: *

#Auth Keys
auth-token-header-name=Authorization
auth-token-type=APIKEY
auth-token=2993A070-1E86-4967-8C93-D592602EDD30

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

server.max-http-header-size=10000000
